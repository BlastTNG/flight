#!/usr/bin/perl -w

use strict;

my $WHO = "/usr/bin/who";
my $HOST = "/usr/bin/host";
my $blastcmd_auth = "@DATA_ETC_DIR@/blastcmd.auth";
my $username = getpwuid($<);
my $ip;
my $host = "";

sub resolve
{
  local $_ = shift;
  chomp;

  unless (/\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/) {
    $host = $_;

    my $lookup = `$HOST $host 2>/dev/null`
      or die "Unable to execute $HOST";

    chomp $lookup;

    die "Unable to resolve \"$host\"" if ($lookup =~ /not found/);

    $lookup =~ /([^ ]*)$/;
    $_ = $1;
  }
  return $_;
}

if ($#ARGV >= 0) {
  # Let the user specify the IP address to add
  $ip = &resolve(shift);
} else {
  # try to get it from who
  my $whodata = `$WHO -m --ips 2>/dev/null`
    or die "Unable to execute $WHO";
  my ($addr) = $whodata =~ /\(?([^ \)]*)\)?$/;

  die "Unable to parse $WHO output" unless ($addr);

  $ip = &resolve($addr);
}

# update AUTH file
my $AUTH;

# check if it's already there
if (open $AUTH, $blastcmd_auth) {
  while (<$AUTH>) {
    s/#.*//; # Delete all comments
    if (/^$ip\s/) {
      $host = " ($host)" if $host;
      die "$ip$host is already in the auth file!\n"
    }
  }
}

# nope, append it.
open $AUTH, ">>$blastcmd_auth" or die "Unable to write AUTH file: $!";
my $new_auth = "$ip # $username $host";
print $AUTH "$new_auth\n" or die "Unable to write AUTH file: $!";

print "Added:\n  $new_auth\nto the auth file.\n";
