#ifndef CLENSADAPTERDEFS_H
#define CLENSADAPTERDEFS_H

#define RM_VERBOSE_MODE 1
#define RM_NONVERBOSE_MODE 0

typedef enum { 
	//interface and hardware commands
	LC_NULL, 
	LC_IDENTIFY_LENS, LC_HARDWARE_VERSION, LC_SET_BAUD_RATE, LC_BAUD_STORE, LC_SET_RESPONSE_MODE,
	LC_XMODEM, LC_SERIAL_NUMBER, LC_VERSION_NUM, LC_VERSION_STR, LC_LIBRARY_VERSION,
	
	//focus commands
	LC_MOVE_FOCUS_INFINITY, LC_MOVE_FOCUS_ZERO, LC_MOVE_FOCUS_ABS, LC_MOVE_FOCUS_INC, 
	LC_GET_FOCUS_POSITION, LC_GET_FOCUS_DISTANCE, LC_SET_FOCUS_COUNTER, LC_DEFINE_ZOOM,
	
	//aperture commands
	LC_INITIALIZE, LC_DEFINE_APERTURE_AXIS, LC_MOVE_APERTURE_OPEN, LC_MOVE_APERTURE_CLOSED,
	LC_MOVE_APERTURE_ABS, LC_MOVE_APERTURE_INC, LC_GET_APERTURE_POSITION, 
	
	//unknown and not-implemented commands
	LC_IMAGE_STABILIZATION, LC_DEFINE_FOCUS_AXIS

} LENS_COMMAND; //lens adapter commands

typedef enum {
	//errors affiliated with the interface
	LE_PARSE_ERROR=1, LE_MANUAL_FOCUS, LE_NO_LENS, LE_DISTANCE_NOT_AVAIL, 
	LE_NOT_INITIALIZED, LE_INVALID_BAUD, LE_NO_SHUTTER, LE_INSUFFICIENT_POWER, 
	LE_INVALID_LIBRARY,LE_COMMUNICATION_ERROR,
	
	//errors used by this class
	LE_NO_ERROR = 0, LE_BAD_PARAM = 11, LE_CONNECTION_ERROR, LE_TIMEOUT, LE_AUTOFOCUS_ERROR
	
} LENS_ERROR; //possible error values returned by the lens adapter

#endif          //CLENSADAPTERDEFS_H
