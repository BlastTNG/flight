#!/bin/bash

#override MAS_DATA_ROOT, if an argument was given
if [ ! -z $1 ]; then
  export MAS_DATA_ROOT=$1
fi

#initialise environment
if [ ! -x ${MAS_VAR:=/usr/mce/bin/mas_var} ]; then
  echo "Cannot find mas_var.  Set MAS_VAR to the full path to the mas_var binary." >&2
  exit 1
else
  eval $(${MAS_VAR} -s)
fi

if [ "$MAS_ROOT" == "" ]; then
  echo MAS_ROOT variable not set.
  exit 1
fi

# data_root is the first argument to this function, or $MAS_DATA_ROOT if
# no arguments are given.

data_root=${1:-$MAS_DATA_ROOT}

# All our new files should be group rw
umask 002

# Attempt to cd to data_root
if ! cd ${data_root}; then
  echo "Error: Cannot cd to ${data_root}"
  exit 1
fi

today=`date +%Y%m%d`
if [ ! -e $today ]; then
  ln -sf current_data $today
fi
echo current_data > current_data_name

# Determine array name and names of config files
array_id=`cat ${data_root}/array_id`
if [ "$array_id" == "" ]; then
  echo "No array ID found in ${data_root}/array_id!"
  array_id="default"
fi
case "$array_id" in
  default)
    exp_cfg=experiment.cfg
    arr_cfg=array.cfg
    ;;
  *)
    exp_cfg=experiment_${array_id}.cfg
    arr_cfg=array_${array_id}.cfg
esac

# Populate the new data folder.

cd current_data

if [ ! -e analysis ]; then
  mkdir analysis
  chmod g+s analysis
fi

[ -e experiment.cfg ] || echo "Copying experiment.cfg from MAS_CONFIG"
[ -e experiment.cfg ] || cp $MAS_CONFIG/$exp_cfg experiment.cfg || exit 1

# Create an mce config script

new_config="config_mce_auto_setup_current_data"
if [ -e $new_config ]; then
  echo "There is already a config_mce_auto_setup file in this directory"
  echo "Re-writing it."
fi

MAS_DATA_ROOT=${data_root} mce_make_config
chmod u+rwx $new_config
chmod g+rws $new_config
